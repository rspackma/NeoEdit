<Window Name="self" x:Class="NeoEdit.TextEditorUI.TextEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:NeoEdit.Common"
    xmlns:textEditorUI="clr-namespace:NeoEdit.TextEditorUI"
    Title="Text Editor" Height="400" Width="400" WindowState="Maximized">

	<Window.Resources>
		<common:UICommand x:Key="Edit_Undo" Header="_Undo" Key="Z" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Redo" Header="_Redo" Key="Z" Modifiers="Control+Shift"  Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Cut" Header="C_ut" Key="X" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Copy" Header="_Copy" Key="C" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Paste" Header="_Paste" Key="V" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Find" Header="_Find" Key="F" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_ToUpper" Header="Upper case" Key="U" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_ToLower" Header="Lower case" Key="U" Modifiers="Control+Shift" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_ToHex" Header="To hex" Key="H" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_FromHex" Header="From hex" Key="H" Modifiers="Control+Shift" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_ToChar" Header="To char" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_FromChar" Header="From char" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Width" Header="_Width" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Edit_Trim" Header="_Trim" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Select_Single" Header="_Single" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Select_Lines" Header="_Lines" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Select_Find" Header="_Find results" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Select_Marks" Header="_Marks" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Mark_Find" Header="_Find results" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Mark_Selection" Header="_Selection" Key="M" Modifiers="Control" Run="CommandRun" CanRun="CommandCanRun"/>
		<common:UICommand x:Key="Mark_Clear" Header="_Clear marks" Run="CommandRun" CanRun="CommandCanRun"/>
	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="Auto"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Menu>
			<MenuItem Header="_Edit">
				<MenuItem Command="{StaticResource Edit_Undo}"/>
				<MenuItem Command="{StaticResource Edit_Redo}"/>
				<Separator/>
				<MenuItem Command="{StaticResource Edit_Cut}"/>
				<MenuItem Command="{StaticResource Edit_Copy}"/>
				<MenuItem Command="{StaticResource Edit_Paste}"/>
				<Separator/>
				<MenuItem Command="{StaticResource Edit_Find}"/>
				<Separator/>
				<MenuItem Command="{StaticResource Edit_ToUpper}"/>
				<MenuItem Command="{StaticResource Edit_ToLower}"/>
				<MenuItem Command="{StaticResource Edit_ToHex}"/>
				<MenuItem Command="{StaticResource Edit_FromHex}"/>
				<MenuItem Command="{StaticResource Edit_ToChar}"/>
				<MenuItem Command="{StaticResource Edit_FromChar}"/>
				<MenuItem Command="{StaticResource Edit_Width}"/>
				<MenuItem Command="{StaticResource Edit_Trim}"/>
			</MenuItem>
			<MenuItem Header="_Select">
				<MenuItem Command="{StaticResource Select_Single}"/>
				<MenuItem Command="{StaticResource Select_Lines}"/>
				<MenuItem Command="{StaticResource Select_Find}"/>
				<MenuItem Command="{StaticResource Select_Marks}"/>
			</MenuItem>
			<MenuItem Header="_Mark">
				<MenuItem Command="{StaticResource Mark_Find}"/>
				<MenuItem Command="{StaticResource Mark_Selection}"/>
				<MenuItem Command="{StaticResource Mark_Clear}"/>
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem Header="_Highlighting" ItemsSource="{Binding Converter={common:ExpressionConverter}, ConverterParameter=Type:NeoEdit.TextEditorUI.Highlighting+HighlightingType}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="MenuItem">
							<EventSetter Event="Click" Handler="HighlightingClicked"/>
							<Setter Property="IsChecked">
								<Setter.Value>
									<MultiBinding Converter="{common:ExpressionConverter}" ConverterParameter="[0] == [1]">
										<Binding Path="Header" RelativeSource="{RelativeSource Self}"/>
										<Binding Path="HighlightType" ElementName="self"/>
									</MultiBinding>
								</Setter.Value>
							</Setter>
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
			</MenuItem>
		</Menu>

		<textEditorUI:TextCanvas x:Name="canvas" Grid.Row="1"
			Data="{Binding Data, ElementName=self, Mode=OneWay}"
			ChangeCount="{Binding Data.ChangeCount, ElementName=self, Mode=OneWay}"
			HighlightType="{Binding HighlightType, ElementName=self, Mode=TwoWay}"
			xScrollSmallChange="{Binding SmallChange, ElementName=xScroll, Mode=OneWayToSource}"
			xScrollLargeChange="{Binding LargeChange, ElementName=xScroll, Mode=OneWayToSource}"
			xScrollMaximum="{Binding Maximum, ElementName=xScroll, Mode=OneWayToSource}"
			xScrollValue="{Binding Value, ElementName=xScroll, Mode=TwoWay}"
			yScrollSmallChange="{Binding SmallChange, ElementName=yScroll, Mode=OneWayToSource}"
			yScrollLargeChange="{Binding LargeChange, ElementName=yScroll, Mode=OneWayToSource}"
			yScrollMaximum="{Binding Maximum, ElementName=yScroll, Mode=OneWayToSource}"
			yScrollValue="{Binding Value, ElementName=yScroll, Mode=TwoWay}"
		/>
		<ScrollBar Name="yScroll" Grid.Row="1" Grid.Column="1" ViewportSize="{Binding ActualWidth, ElementName=canvas}"/>
		<ScrollBar Name="xScroll" Grid.Row="2" Orientation="Horizontal" ViewportSize="{Binding ActualHeight, ElementName=canvas}"/>
	</Grid>

</Window>
