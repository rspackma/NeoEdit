<Window Name="self" x:Class="NeoEdit.TextEditor.Dialogs.GetExpressionDialog" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:guiCommon="clr-namespace:NeoEdit.GUI.Common;assembly=GUI"
	Title="Expression" SizeToContent="WidthAndHeight" FocusManager.FocusedElement="{Binding ElementName=expression}">

	<Grid Margin="10">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition Height="10"/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition Height="10"/>
			<RowDefinition/>
			<RowDefinition Height="10"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Label Grid.Row="0" Grid.Column="0" Content="Expression:" Target="{Binding ElementName=expression}"/>
		<TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Name="expression" Width="500" Text="{Binding Expression, ElementName=self, UpdateSourceTrigger=PropertyChanged}"/>

		<StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
			<Label>
				<Italic>x = selection, y = order</Italic>
			</Label>

			<CheckBox Name="includeMatches"  Content="_Include Matches" IsChecked="{Binding IncludeMatches, ElementName=self}" VerticalAlignment="Center" Margin="10,0,0,0"/>
		</StackPanel>

		<Label Grid.Row="3" Grid.Column="0" Content="Examples:"/>
		<TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Example1, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="3" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="3" Grid.Column="3" Name="example1Value" Text="{Binding Example1Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Example2, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="4" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="4" Grid.Column="3" Name="example2Value" Text="{Binding Example2Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="5" Grid.Column="1" Text="{Binding Example3, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="5" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="5" Grid.Column="3" Name="example3Value" Text="{Binding Example3Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="6" Grid.Column="1" Text="{Binding Example4, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="6" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="6" Grid.Column="3" Name="example4Value" Text="{Binding Example4Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="7" Grid.Column="1" Text="{Binding Example5, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="7" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="7" Grid.Column="3" Name="example5Value" Text="{Binding Example5Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="8" Grid.Column="1" Text="{Binding Example6, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="8" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="8" Grid.Column="3" Name="example6Value" Text="{Binding Example6Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="9" Grid.Column="1" Text="{Binding Example7, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="9" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="9" Grid.Column="3" Name="example7Value" Text="{Binding Example7Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="10" Grid.Column="1" Text="{Binding Example8, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="10" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="10" Grid.Column="3" Name="example8Value" Text="{Binding Example8Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="11" Grid.Column="1" Text="{Binding Example9, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="11" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="11" Grid.Column="3" Name="example9Value" Text="{Binding Example9Value, ElementName=self}" IsEnabled="False"/>

		<TextBox Grid.Row="12" Grid.Column="1" Text="{Binding Example10, ElementName=self}" IsEnabled="False"/>
		<Label Grid.Row="12" Grid.Column="2" Content="->"/>
		<TextBox Grid.Row="12" Grid.Column="3" Name="example10Value" Text="{Binding Example10Value, ElementName=self}" IsEnabled="False"/>

		<UniformGrid Grid.Row="14" Grid.ColumnSpan="4" HorizontalAlignment="Right" Columns="2">
			<Button Click="OkClick" IsDefault="True" Content="Ok" Padding="10,1"/>
			<Button IsCancel="True" Content="Cancel" Padding="10,1"/>
		</UniformGrid>

		<TextBlock Grid.Row="16" Grid.Column="0" Grid.ColumnSpan="4">
			<Bold>Help</Bold> <Italic>(t = text, i = case-insensitive)</Italic><LineBreak/>
			<Italic>Evaluate parameter as expression:</Italic> Eval(x)<LineBreak/>
			<Italic>Force to integer:</Italic> Int(x/2)<LineBreak/>
			<Italic>Grouping operator:</Italic> ()<LineBreak/>
			<Italic>Mathematical operators:</Italic> * / % + -<LineBreak/>
			<Italic>Text operators:</Italic> t+<LineBreak/>
			<Italic>Comparison operators:</Italic> &lt; &lt;= &gt; &gt;= t&lt; t&lt;= t&gt; t&gt;= ti&lt; ti&lt;= ti&gt; ti&gt;=<LineBreak/>
			<Italic>Equality operators:</Italic> == != t== t!= ti== ti!=<LineBreak/>
			<Italic>Boolean operators:</Italic> &amp;&amp; ||<LineBreak/>
			<Italic>Ternary operator:</Italic> ? :
		</TextBlock>
	</Grid>
</Window>
