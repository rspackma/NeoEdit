<Window Name="self" x:Class="NeoEdit.GUI.Dialogs.BinaryFindDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:guiCommon="clr-namespace:NeoEdit.GUI.Common"
	xmlns:guiDialogs="clr-namespace:NeoEdit.GUI.Dialogs"
	Title="Find" SizeToContent="WidthAndHeight" FocusManager.FocusedElement="{Binding ElementName=findText}">

	<Window.Resources>
		<guiDialogs:ValidValueConverter x:Key="ValidConv"/>
	</Window.Resources>

	<StackPanel Margin="10,5">
		<StackPanel.Style>
			<Style>
				<Style.Resources>
					<Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
						<Setter Property="Padding" Value="0,0,10,0"/>
					</Style>
					<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
						<Setter Property="Margin" Value="0,0,10,0"/>
						<Setter Property="IsChecked" Value="True"/>
						<Setter Property="Focusable" Value="False"/>
					</Style>
					<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
						<Setter Property="Focusable" Value="False"/>
					</Style>
				</Style.Resources>
			</Style>
		</StackPanel.Style>

		<Label Content="Search for:"/>
		<TextBox Name="findText" Margin="0,0,0,10" Text="{Binding FindText, ElementName=self, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

		<StackPanel Orientation="Horizontal">
			<Label Content="Show:" Margin="0,0,5,0"/>
			<CheckBox Content="_Little Endian" IsChecked="{Binding ShowLE, ElementName=self}"/>
			<CheckBox Content="_Big Endian" IsChecked="{Binding ShowBE, ElementName=self}"/>
			<CheckBox Content="_Integers" IsChecked="{Binding ShowInt, ElementName=self}"/>
			<CheckBox Content="_Floats" IsChecked="{Binding ShowFloat, ElementName=self}"/>
			<CheckBox Content="_Strings" IsChecked="{Binding ShowStr, ElementName=self}"/>
		</StackPanel>

		<GroupBox Header="Integers">
			<GroupBox.Visibility>
				<MultiBinding Converter="{guiCommon:ExpressionConverter}" ConverterParameter="[0] &amp;&amp; ([1] || [2])">
					<Binding Path="ShowInt" ElementName="self"/>
					<Binding Path="ShowLE" ElementName="self"/>
					<Binding Path="ShowBE" ElementName="self"/>
				</MultiBinding>
			</GroupBox.Visibility>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="col0"/>
					<ColumnDefinition x:Name="col1"/>
					<ColumnDefinition x:Name="col2"/>
					<ColumnDefinition x:Name="col3"/>
					<ColumnDefinition x:Name="col4"/>
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="Unsigned LE:" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}"/>

				<CheckBox Grid.Row="0" Grid.Column="1" Name="UInt8LE" Content="UInt8LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt8LE}"/>
				<CheckBox Grid.Row="0" Grid.Column="2" Name="UInt16LE" Content="UInt16LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt16LE}"/>
				<CheckBox Grid.Row="0" Grid.Column="3" Name="UInt32LE" Content="UInt32LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt32LE}"/>
				<CheckBox Grid.Row="0" Grid.Column="4" Name="UInt64LE" Content="UInt64LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt64LE}"/>

				<Label Grid.Row="1" Grid.Column="0" Content="Signed LE:" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}"/>
				<CheckBox Grid.Row="1" Grid.Column="1" Name="Int8LE" Content="Int8LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int8LE}"/>
				<CheckBox Grid.Row="1" Grid.Column="2" Name="Int16LE" Content="Int16LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int16LE}"/>
				<CheckBox Grid.Row="1" Grid.Column="3" Name="Int32LE" Content="Int32LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int32LE}"/>
				<CheckBox Grid.Row="1" Grid.Column="4" Name="Int64LE" Content="Int64LE" Visibility="{Binding ShowLE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int64LE}"/>

				<Label Grid.Row="2" Grid.Column="0" Content="Unsigned BE:" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}"/>
				<CheckBox Grid.Row="2" Grid.Column="1" Name="UInt8BE" Content="UInt8BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt8BE}"/>
				<CheckBox Grid.Row="2" Grid.Column="2" Name="UInt16BE" Content="UInt16BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt8BE}"/>
				<CheckBox Grid.Row="2" Grid.Column="3" Name="UInt32BE" Content="UInt32BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt8BE}"/>
				<CheckBox Grid.Row="2" Grid.Column="4" Name="UInt64BE" Content="UInt64BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=UInt8BE}"/>

				<Label Grid.Row="3" Grid.Column="0" Content="Signed BE:" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}"/>
				<CheckBox Grid.Row="3" Grid.Column="1" Name="Int8BE" Content="Int8BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int8BE}"/>
				<CheckBox Grid.Row="3" Grid.Column="2" Name="Int16BE" Content="Int16BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int16BE}"/>
				<CheckBox Grid.Row="3" Grid.Column="3" Name="Int32BE" Content="Int32BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int32BE}"/>
				<CheckBox Grid.Row="3" Grid.Column="4" Name="Int64BE" Content="Int64BE" Visibility="{Binding ShowBE, ElementName=self, Converter={guiCommon:ExpressionConverter}}" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Int64BE}"/>
			</Grid>
		</GroupBox>

		<GroupBox Header="Floats" Visibility="{Binding ShowFloat, ElementName=self, Converter={guiCommon:ExpressionConverter}}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{Binding Width, ElementName=col0}"/>
					<ColumnDefinition Width="{Binding Width, ElementName=col1}"/>
					<ColumnDefinition Width="{Binding Width, ElementName=col2}"/>
					<ColumnDefinition Width="{Binding Width, ElementName=col3}"/>
					<ColumnDefinition Width="{Binding Width, ElementName=col4}"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<CheckBox Grid.Column="1" Name="Single" Content="Single" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Single}"/>
				<CheckBox Grid.Column="2" Name="Double" Content="Double" IsEnabled="{Binding FindText, ElementName=self, Converter={StaticResource ValidConv}, ConverterParameter=Double}"/>
			</Grid>
		</GroupBox>

		<GroupBox Header="Strings" Visibility="{Binding ShowStr, ElementName=self, Converter={guiCommon:ExpressionConverter}}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="_Encodings:" Target="{Binding ElementName=codePages}"/>
				<CheckBox Grid.Row="0" Grid.Column="1" Content="Match _Case" IsChecked="{Binding MatchCase, ElementName=self}" HorizontalAlignment="Right"/>

				<ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="codePages" ItemsSource="{Binding CodePageItems, ElementName=self}" Height="200" BorderBrush="{x:Null}" SelectionMode="Extended">
					<ListBox.Style>
						<Style>
							<Style.Resources>
								<Style TargetType="guiDialogs:BinaryFindDialog+CodePageItem">
									<Setter Property="IsEnabled">
										<Setter.Value>
											<MultiBinding Converter="{StaticResource ValidConv}">
												<Binding Path="FindText" ElementName="self"/>
												<Binding Path="CodePage"/>
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</Style>
							</Style.Resources>
						</Style>
					</ListBox.Style>
				</ListBox>
			</Grid>
		</GroupBox>

		<UniformGrid Grid.Row="2" HorizontalAlignment="Right" Columns="2">
			<Button Click="OkClick" IsDefault="True" Content="Ok" Padding="10,1"/>
			<Button IsCancel="True" Content="Cancel" Padding="10,1"/>
		</UniformGrid>
	</StackPanel>
</Window>
