<Window Name="self" x:Class="NeoEdit.HexEdit.Dialogs.Models.EditActionDialog" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sysWin="clr-namespace:System.Windows;assembly=PresentationFramework"
	xmlns:guiCommon="clr-namespace:NeoEdit.GUI.Common;assembly=NeoEdit.GUI"
	Title="Edit Model Action" SizeToContent="WidthAndHeight">

	<Window.Resources>
		<sysWin:GridLength x:Key="DescWidth">100</sysWin:GridLength>
	</Window.Resources>

	<StackPanel Margin="10">
		<GroupBox Header="Action">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource DescWidth}"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="Type:" HorizontalContentAlignment="Right"/>
				<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
					<RadioButton Content="B_it" Margin="0,0,10,0" GroupName="ActionType" IsChecked="{Binding Action.Type, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=Bit}"/>
					<RadioButton Content="_Basic Type" Margin="0,0,10,0" GroupName="ActionType" IsChecked="{Binding Action.Type, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=BasicType}"/>
					<RadioButton Content="_String" Margin="0,0,10,0" GroupName="ActionType" IsChecked="{Binding Action.Type, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=String}"/>
					<RadioButton Content="_Unused" Margin="0,0,10,0" GroupName="ActionType" IsChecked="{Binding Action.Type, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=Unused}"/>
					<RadioButton Content="_Model" Margin="0,0,10,0" GroupName="ActionType" IsChecked="{Binding Action.Type, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=Model}"/>
				</StackPanel>

				<Label Grid.Row="1" Grid.Column="0" Content="_Location:" HorizontalContentAlignment="Right" Target="{Binding ElementName=location}"/>
				<TextBox Grid.Row="1" Grid.Column="1" Name="location" Text="{Binding Action.Location, ElementName=self, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

				<Label Grid.Row="2" Grid.Column="0" Content="_Alignment Bits:" HorizontalContentAlignment="Right" Target="{Binding ElementName=alignment}"/>
				<guiCommon:NumericUpDown Grid.Row="2" Grid.Column="1" Name="alignment" Minimum="1" Value="{Binding Action.AlignmentBits, ElementName=self}"/>

				<Label Grid.Row="3" Grid.Column="0" Content="_Repeat:" HorizontalContentAlignment="Right" Target="{Binding ElementName=repeat}"/>
				<TextBox Grid.Row="3" Grid.Column="1" Name="repeat" Text="{Binding Action.Repeat, ElementName=self}"/>

				<Label Grid.Row="4" Grid.Column="0" Content="_Save Name:" HorizontalContentAlignment="Right" Target="{Binding ElementName=saveName}"/>
				<TextBox Grid.Row="4" Grid.Column="1" Name="saveName" Text="{Binding Action.SaveName, ElementName=self, UpdateSourceTrigger=PropertyChanged}"/>
			</Grid>
		</GroupBox>

		<GroupBox Header="Basic Type" Visibility="{Binding Action.Type, ElementName=self, Converter={guiCommon:ExpressionConverter}, ConverterParameter='[0] t== \'BasicType\''}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource DescWidth}"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="_Type:" HorizontalContentAlignment="Right" Target="{Binding ElementName=basicType}"/>
				<ComboBox Grid.Row="0" Grid.Column="1" Name="basicType" ItemsSource="{Binding BasicTypes, ElementName=self}" SelectedValue="{Binding Action.CodePage, ElementName=self, Mode=TwoWay}"/>
			</Grid>
		</GroupBox>

		<GroupBox Header="String" Visibility="{Binding Action.Type, ElementName=self, Converter={guiCommon:ExpressionConverter}, ConverterParameter='[0] t== \'String\''}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource DescWidth}"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="Type:" HorizontalContentAlignment="Right"/>
				<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
					<RadioButton Content="_Variable" Margin="0,0,10,0" GroupName="StringType" IsChecked="{Binding Action.StringType, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=StringWithLength}"/>
					<RadioButton Content="_Null-terminated" Margin="0,0,10,0" GroupName="StringType" IsChecked="{Binding Action.StringType, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=StringNullTerminated}"/>
					<RadioButton Content="_Fixed-width" Margin="0,0,10,0" GroupName="StringType" IsChecked="{Binding Action.StringType, ElementName=self, Converter={guiCommon:RadioConverter}, ConverterParameter=StringFixedWidth}"/>
				</StackPanel>

				<Label Grid.Row="1" Grid.Column="0" Content="_Encoding:" HorizontalContentAlignment="Right" Target="{Binding ElementName=encoding}"/>
				<ComboBox Grid.Row="1" Grid.Column="1" Name="encoding" ItemsSource="{Binding EncodingTypes, ElementName=self}" SelectedValue="{Binding Action.Encoding, ElementName=self}" DisplayMemberPath="Value" SelectedValuePath="Key"/>

				<Label Grid.Row="2" Grid.Column="0" Content="_Length:" HorizontalContentAlignment="Right" Target="{Binding ElementName=varLength}" Visibility="{Binding Visibility, ElementName=varLength}"/>
				<ComboBox Grid.Row="2" Grid.Column="1" Name="varLength" ItemsSource="{Binding BasicTypes, ElementName=self}" SelectedValue="{Binding Action.CodePage, ElementName=self, Mode=TwoWay}" Visibility="{Binding Action.StringType, ElementName=self, Converter={guiCommon:ExpressionConverter}, ConverterParameter='[0] t== \'StringWithLength\''}"/>

				<Label Grid.Row="3" Grid.Column="0" Content="_Length:" HorizontalContentAlignment="Right" Target="{Binding ElementName=fixedLength}" Visibility="{Binding Visibility, ElementName=fixedLength}"/>
				<guiCommon:NumericUpDown Grid.Row="3" Grid.Column="1" Name="fixedLength" Minimum="1" Value="{Binding Action.FixedLength, ElementName=self}" Visibility="{Binding Action.StringType, ElementName=self, Converter={guiCommon:ExpressionConverter}, ConverterParameter='[0] t== \'StringFixedWidth\''}"/>
			</Grid>
		</GroupBox>

		<GroupBox Header="Unused" Visibility="{Binding Action.Type, ElementName=self, Converter={guiCommon:ExpressionConverter}, ConverterParameter='[0] t== \'Unused\''}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource DescWidth}"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="_Length:" HorizontalContentAlignment="Right" Target="{Binding ElementName=unusedLength}"/>
				<guiCommon:NumericUpDown Grid.Row="0" Grid.Column="1" Name="unusedLength" Minimum="1" Value="{Binding Action.FixedLength, ElementName=self}"/>
			</Grid>
		</GroupBox>

		<GroupBox Header="Model" Visibility="{Binding Action.Type, ElementName=self, Converter={guiCommon:ExpressionConverter}, ConverterParameter='[0] t== \'Model\''}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource DescWidth}"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="_Model:" HorizontalContentAlignment="Right" Target="{Binding ElementName=model}"/>
				<ComboBox Grid.Row="0" Grid.Column="1" Name="model" ItemsSource="{Binding Models, ElementName=self}" SelectedValue="{Binding Action.Model, ElementName=self}" DisplayMemberPath="Value" SelectedValuePath="Key"/>
			</Grid>
		</GroupBox>

		<StackPanel Height="10"/>
		
		<UniformGrid Grid.Row="5" Grid.ColumnSpan="3" HorizontalAlignment="Right" Rows="1">
			<Button Click="OkClick" IsDefault="True" Content="Ok" Padding="10,1"/>
			<Button IsCancel="True" Content="Cancel" Padding="10,1"/>
		</UniformGrid>
	</StackPanel>

</Window>
